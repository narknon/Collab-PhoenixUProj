#include "EnemyAIAttackData.h"

UEnemyAIAttackData::UEnemyAIAttackData() {
    this->bAttackDisable = false;
    this->AttackType = EEnemy_AttackType::Ranged;
    this->ParryMunitionType = EEnemy_ParryMunitionType::None;
    this->bTicketRequired = true;
    this->TicketTimeoutOverride = 0.00f;
    this->AttackAbilityPtr = NULL;
    this->ExtraData = NULL;
    this->SpellToolRecord = NULL;
    this->MunitionDataAsset = NULL;
    this->AttackBehaviorTree = NULL;
    this->AttackSplitBehaviorTree = NULL;
    this->AttackCounterBehaviorTree = NULL;
    this->AttackCounterBehaviorAction = EEnemyAIAction::None;
    this->m_damage = -1.00f;
    this->bUnblockable = false;
    this->bCanDamageEvenAfterDodge = false;
    this->DotDamageTickRate = 0.50f;
    this->EnergyCost = 500.00f;
    this->bCanAttackWhenEnergyDrained = false;
    this->bCannotAttackWhenTargetParrying = false;
    this->bContinueMoveWhenAttackStarts = false;
    this->NumSubAttacks = 1;
    this->DistanceScale = 1.00f;
    this->bCanWorldScale = true;
    this->bCanPerceptionPointVolumeScale = true;
    this->GameAttackState = ENPC_GameAttackState::None;
    this->bPairedWeapons = false;
    this->AttackChoice = NULL;
    this->SelectTier = EEnemy_AttackTier::High;
    this->OffNavSelectTier = EEnemy_AttackTier::None;
    this->bRequirePathForPosAndAttack = false;
    this->bRequireStraightLinePathForAttack = false;
    this->bRequireStayInVolume = false;
    this->ProbabilityScale = 1.00f;
    this->bImmediateAttackOnly = false;
    this->bCanChooseBetterAttack = true;
    this->CanChooseBetterAttackMovementMinTime = 10.00f;
    this->bHeightDeltaRequirement = false;
    this->HeightRequirement = 10000.00f;
    this->bChooseAgainOnceInRange = false;
    this->bCanChooseFromSplit = false;
    this->bCanOnlyChooseFromSplit = false;
    this->bCounterAttackAddContextTag = false;
    this->RequiredGameContext = ENPC_GameContext::None;
    this->ExcludeGameContext = ENPC_GameContext::None;
    this->RequiredTargetGameContext = ENPC_GameContext::None;
    this->ExcludeTargetGameContext = ENPC_GameContext::None;
    this->RandomWeight = 0.25f;
    this->SelectWeight = 1.00f;
    this->bAttackExcludeWeight = false;
    this->SelectCooldownType = EEnemy_SelectCooldownType::Immediate;
    this->SelectCooldown = 0.00f;
    this->SelectCooldownDeviation = 0.00f;
    this->SelectCooldownIncrement = 0.00f;
    this->SelectCooldownIncrementThreshold = 0.00f;
    this->SelectCooldownIncrementThresholdDeviation = 0.00f;
    this->SelectGroupCooldown = 0.00f;
    this->MinTeammates = -1;
    this->MaxTeammates = -1;
    this->BuffType = EEnemy_BuffType_DEPRECATED::None_DEPRECATED;
    this->BuffRadius = 2500.00f;
    this->NeedBuffRatio = 0.50f;
    this->bRequireGround = true;
    this->MinAttackAngle = 6.00f;
    this->m_attackIfTooClose = false;
    this->bCanApproach = true;
    this->bCanRetreat = true;
    this->bCanMoveIfInRange = true;
    this->bCanWaitIfNotInRange = false;
    this->LimitAttackOnTarget = EEnemy_LimitAttackOnTarget::ReleaseStart;
    this->bStopReqPriorToAttack = true;
    this->bExecutionRequiresLoS = true;
    this->bRequireTeamateLOSForPos = true;
    this->MinRangedHeightDelta = 5000.00f;
    this->MinMeleeHeightDelta = 250.00f;
    this->MinBallisticHeightDelta = 800.00f;
    this->bRequireCorridorCheck = true;
    this->RequireLOSCorridorHalfWidth = 100.00f;
    this->RangedCorridorHalfWidth = 50.00f;
    this->RequireCorridorDist = 100.00f;
    this->RequireCorridorStartDist = 400.00f;
    this->RequireCorridorStopDist = 300.00f;
    this->Timeout = -1.00f;
    this->TimeoutDelta = 0.00f;
    this->AbortDeltaPlus = -1.00f;
    this->AbortDeltaMinus = -1.00f;
    this->bCanAttackWhileTargetIsReacting = true;
    this->bFlourishSplit = false;
    this->bHoldTicketOnSplit = false;
    this->bRetreatSplit = false;
    this->bRetreat = true;
    this->RetreatMinDistFromTarget = 500.00f;
    this->RetreatMinTravelDist = 500.00f;
    this->RetreatThreshold = 100.00f;
    this->bIgnoreAttackWithTransientWeaponIfHasWeapon = false;
    this->bCanReposition = true;
}

